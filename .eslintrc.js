module.exports = {
    env: {
        node: true,
        es2021: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:prettier/recommended',
    ],
    parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    plugins: [
        'prettier',
    ],
    rules: {
        'prettier/prettier': 'error',
        'no-unused-vars': 'error',
        'no-explicit-any': 'error',
        'no-console': 'warn',
        'no-debugger': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        'eqeqeq': 'error',
        'curly': 'error',
        'no-duplicate-imports': 'error',
        'no-trailing-spaces': 'error',
        'eol-last': 'error',
        'semi': ['error', 'always'],
        'quotes': ['error', 'single'],
        'no-multi-spaces': 'error',
        'no-multiple-empty-lines': ['error', { max: 1 }],
        'no-nested-ternary': 'error',
        'no-new-wrappers': 'error',
        'no-param-reassign': 'error',
        'no-proto': 'error',
        'no-return-assign': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-unneeded-ternary': 'error',
        'no-useless-call': 'error',
        'no-useless-concat': 'error',
        'no-useless-return': 'error',
        'no-shadow': 'error',
        'no-undef-init': 'error',
        'no-undefined': 'error',
        'no-use-before-define': ['error', { functions: false, classes: true }],
        'block-spacing': 'error',
        'brace-style': ['error', '1tbs', { allowSingleLine: true }],
        'camelcase': 'error',
        'comma-dangle': ['error', 'always-multiline'],
        'comma-spacing': ['error', { before: false, after: true }],
        'comma-style': ['error', 'last'],
        'consistent-this': ['error', 'self'],
        'func-call-spacing': ['error', 'never'],
        'key-spacing': ['error', { beforeColon: false, afterColon: true }],
        'keyword-spacing': ['error', { before: true, after: true }],
        'lines-around-comment': 'error',
        'max-depth': ['error', 4],
        'max-len': ['error', { code: 80 }],
        'max-lines': ['error', { max: 300, skipBlankLines: true, skipComments: true }],
        'max-nested-callbacks': ['error', 3],
        'max-params': ['error', 3],
        'max-statements': ['error', 10],
        'new-cap': 'error',
        'new-parens': 'error',
        'no-array-constructor': 'error',
        'no-bitwise': 'error',
        'no-lonely-if': 'error',
        'no-mixed-operators': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-new-object': 'error',
        'no-plusplus': 'error',
        'no-trailing-spaces': 'error',
        'no-unneeded-ternary': 'error',
        'no-whitespace-before-property': 'error',
        'object-curly-spacing': ['error', 'always'],
        'one-var': ['error', 'never'],
        'operator-linebreak': ['error', 'before'],
        'padded-blocks': ['error', 'never'],
        'quote-props': ['error', 'as-needed'],  
        'space-before-blocks': ['error', 'always'],
        'space-before-function-paren': ['error', 'never'],
        'space-in-parens': ['error', 'never'],
        'space-infix-ops': 'error',
        'spaced-comment': ['error', 'always', { markers: ['!'] }],
    },
};
